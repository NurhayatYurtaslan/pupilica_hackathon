# OSMEA Color System - Cursor Rules

## üì¶ Package Overview
OSMEA Color System provides a comprehensive color palette with semantic naming, Material Design integration, and consistent theming across Flutter applications. This system includes 50+ predefined colors organized into logical categories for maintainable and accessible design.

## üéØ Development Guidelines

### üìÅ File Structure
```
packages/components/lib/src/styles/
‚îî‚îÄ‚îÄ colors.dart    # Main color system file
```

### üé® Color Categories

#### 1. üåà Core Colors
- `white`, `black`, `transparent` - Basic color constants
- Foundation colors for all UI elements

#### 2. ‚ö´ Gray Palette (MaterialColor)
- `paperWhite` to `void_` - 12 semantic gray shades
- From lightest (25) to darkest (950)
- Consistent naming: `grayMaterial[shade]`

#### 3. üîµ Blue Palette (MaterialColor)
- `crystalBay` to `abyss` - 9 blue shades
- Primary brand colors with Nordic theme
- Consistent naming: `blueMaterial[shade]`

#### 4. üü† Orange Palette (MaterialColor)
- `desertSand` to `amberFlame` - 4 orange shades
- Accent colors for highlights and warnings
- Consistent naming: `orangeMaterial[shade]`

#### 5. üü¢ Green Palette (MaterialColor)
- `springLeaf` to `pineGrove` - 4 green shades
- Success states and positive actions
- Consistent naming: `greenMaterial[shade]`

#### 6. üåó Shadow System
- `shadowLight`, `shadowDark` - Elevation shadows
- Consistent shadow colors across themes

#### 7. üì¶ Material Colors
- `grey`, `green`, `red`, `orange` - Flutter Material colors
- Standard Material Design color references

### üîß Usage Rules

#### 1. Semantic Color Usage
```dart
// ‚úÖ Good - Use semantic color names
Container(
  color: OsmeaColors.nordicBlue,
  child: Text(
    'Primary Action',
    style: TextStyle(color: OsmeaColors.white),
  ),
)

Card(
  color: OsmeaColors.paperWhite,
  child: Text(
    'Content Card',
    style: TextStyle(color: OsmeaColors.thunder),
  ),
)

// ‚ùå Bad - Hard-coded color values
Container(
  color: Color(0xFF1B80BF),
  child: Text(
    'Primary Action',
    style: TextStyle(color: Color(0xFFFFFFFF)),
  ),
)
```

#### 2. Gray Palette Usage
```dart
// ‚úÖ Good - Use appropriate gray shades
Container(
  decoration: BoxDecoration(
    color: OsmeaColors.snow,        // Light background
    border: Border.all(
      color: OsmeaColors.silver,    // Light border
      width: 1,
    ),
  ),
  child: Text(
    'Content',
    style: TextStyle(
      color: OsmeaColors.thunder,   // Dark text
    ),
  ),
)

// Status-based gray usage
Text(
  'Disabled text',
  style: TextStyle(
    color: OsmeaColors.steel,       // Muted text
  ),
)

Text(
  'Secondary text',
  style: TextStyle(
    color: OsmeaColors.slate,       // Medium text
  ),
)

// ‚ùå Bad - Random gray values
Container(
  color: Colors.grey[100],
  child: Text(
    'Content',
    style: TextStyle(color: Colors.grey[700]),
  ),
)
```

#### 3. Brand Color Usage
```dart
// ‚úÖ Good - Use brand colors consistently
ElevatedButton(
  style: ElevatedButton.styleFrom(
    backgroundColor: OsmeaColors.nordicBlue,
    foregroundColor: OsmeaColors.white,
  ),
  onPressed: () {},
  child: Text('Primary Action'),
)

OutlinedButton(
  style: OutlinedButton.styleFrom(
    foregroundColor: OsmeaColors.nordicBlue,
    side: BorderSide(color: OsmeaColors.nordicBlue),
  ),
  onPressed: () {},
  child: Text('Secondary Action'),
)

// Accent colors for highlights
Container(
  decoration: BoxDecoration(
    color: OsmeaColors.sunsetGlow.withOpacity(0.1),
    border: Border.all(color: OsmeaColors.sunsetGlow),
  ),
  child: Text('Warning content'),
)

// ‚ùå Bad - Inconsistent brand colors
ElevatedButton(
  style: ElevatedButton.styleFrom(
    backgroundColor: Colors.blue[600],
    foregroundColor: Colors.white,
  ),
  onPressed: () {},
  child: Text('Primary Action'),
)
```

#### 4. Status Color Usage
```dart
// ‚úÖ Good - Use appropriate status colors
Container(
  decoration: BoxDecoration(
    color: OsmeaColors.springLeaf,
    border: Border.all(color: OsmeaColors.forestHeart),
  ),
  child: Row(
    children: [
      Icon(Icons.check_circle, color: OsmeaColors.forestHeart),
      Text('Success message'),
    ],
  ),
)

Container(
  decoration: BoxDecoration(
    color: OsmeaColors.desertSand,
    border: Border.all(color: OsmeaColors.sunsetGlow),
  ),
  child: Row(
    children: [
      Icon(Icons.warning, color: OsmeaColors.sunsetGlow),
      Text('Warning message'),
    ],
  ),
)

// Error states
Text(
  'Error message',
  style: TextStyle(color: OsmeaColors.red),
)

// ‚ùå Bad - Inconsistent status colors
Container(
  decoration: BoxDecoration(
    color: Colors.green[100],
    border: Border.all(color: Colors.green),
  ),
  child: Text('Success message'),
)
```

### üì± Theme Integration

#### 1. Light Theme Colors
```dart
// ‚úÖ Good - Light theme color usage
class LightTheme {
  static ThemeData get theme => ThemeData(
    primarySwatch: OsmeaColors.blueMaterial,
    primaryColor: OsmeaColors.nordicBlue,
    scaffoldBackgroundColor: OsmeaColors.paperWhite,
    cardColor: OsmeaColors.white,
    textTheme: TextTheme(
      headlineLarge: TextStyle(color: OsmeaColors.thunder),
      bodyLarge: TextStyle(color: OsmeaColors.slate),
      bodyMedium: TextStyle(color: OsmeaColors.steel),
    ),
    appBarTheme: AppBarTheme(
      backgroundColor: OsmeaColors.white,
      foregroundColor: OsmeaColors.thunder,
      elevation: 0,
    ),
  );
}
```

#### 2. Dark Theme Colors
```dart
// ‚úÖ Good - Dark theme color usage
class DarkTheme {
  static ThemeData get theme => ThemeData(
    brightness: Brightness.dark,
    primarySwatch: OsmeaColors.blueMaterial,
    primaryColor: OsmeaColors.azureWave,
    scaffoldBackgroundColor: OsmeaColors.void_,
    cardColor: OsmeaColors.shark,
    textTheme: TextTheme(
      headlineLarge: TextStyle(color: OsmeaColors.paperWhite),
      bodyLarge: TextStyle(color: OsmeaColors.platinum),
      bodyMedium: TextStyle(color: OsmeaColors.silver),
    ),
    appBarTheme: AppBarTheme(
      backgroundColor: OsmeaColors.shark,
      foregroundColor: OsmeaColors.paperWhite,
      elevation: 0,
    ),
  );
}
```

### üé® Advanced Color Patterns

#### 1. Color Opacity and Blending
```dart
// ‚úÖ Good - Use opacity for subtle effects
Container(
  decoration: BoxDecoration(
    color: OsmeaColors.nordicBlue.withOpacity(0.1),
    border: Border.all(
      color: OsmeaColors.nordicBlue.withOpacity(0.3),
    ),
  ),
  child: Text('Subtle highlight'),
)

// Overlay effects
Container(
  decoration: BoxDecoration(
    color: OsmeaColors.black.withOpacity(0.5),
  ),
  child: Text(
    'Overlay text',
    style: TextStyle(color: OsmeaColors.white),
  ),
)

// ‚ùå Bad - Hard-coded opacity values
Container(
  decoration: BoxDecoration(
    color: Color(0x1A1B80BF),
    border: Border.all(color: Color(0x4D1B80BF)),
  ),
  child: Text('Subtle highlight'),
)
```

#### 2. Gradient Usage
```dart
// ‚úÖ Good - Use brand colors in gradients
Container(
  decoration: BoxDecoration(
    gradient: LinearGradient(
      colors: [
        OsmeaColors.crystalBay,
        OsmeaColors.nordicBlue,
        OsmeaColors.deepSea,
      ],
      begin: Alignment.topLeft,
      end: Alignment.bottomRight,
    ),
  ),
  child: Text(
    'Gradient background',
    style: TextStyle(color: OsmeaColors.white),
  ),
)

// Status gradients
Container(
  decoration: BoxDecoration(
    gradient: LinearGradient(
      colors: [
        OsmeaColors.springLeaf,
        OsmeaColors.forestHeart,
      ],
    ),
  ),
  child: Text('Success gradient'),
)
```

#### 3. Shadow and Elevation
```dart
// ‚úÖ Good - Use consistent shadow colors
Card(
  elevation: 4,
  shadowColor: OsmeaColors.shadowLight,
  child: Text('Elevated card'),
)

Container(
  decoration: BoxDecoration(
    color: OsmeaColors.white,
    boxShadow: [
      BoxShadow(
        color: OsmeaColors.shadowDark,
        blurRadius: 8,
        offset: Offset(0, 4),
      ),
    ],
  ),
  child: Text('Custom shadow'),
)

// ‚ùå Bad - Inconsistent shadow colors
Card(
  elevation: 4,
  shadowColor: Colors.grey,
  child: Text('Elevated card'),
)
```

### üîß Component Integration

#### 1. Button Color Schemes
```dart
// ‚úÖ Good - Consistent button colors
class OsmeaButton extends StatelessWidget {
  final String text;
  final VoidCallback? onPressed;
  final ButtonVariant variant;
  
  const OsmeaButton({
    required this.text,
    this.onPressed,
    this.variant = ButtonVariant.primary,
  });
  
  @override
  Widget build(BuildContext context) {
    switch (variant) {
      case ButtonVariant.primary:
        return ElevatedButton(
          style: ElevatedButton.styleFrom(
            backgroundColor: OsmeaColors.nordicBlue,
            foregroundColor: OsmeaColors.white,
          ),
          onPressed: onPressed,
          child: Text(text),
        );
      
      case ButtonVariant.secondary:
        return OutlinedButton(
          style: OutlinedButton.styleFrom(
            foregroundColor: OsmeaColors.nordicBlue,
            side: BorderSide(color: OsmeaColors.nordicBlue),
          ),
          onPressed: onPressed,
          child: Text(text),
        );
      
      case ButtonVariant.success:
        return ElevatedButton(
          style: ElevatedButton.styleFrom(
            backgroundColor: OsmeaColors.forestHeart,
            foregroundColor: OsmeaColors.white,
          ),
          onPressed: onPressed,
          child: Text(text),
        );
      
      case ButtonVariant.warning:
        return ElevatedButton(
          style: ElevatedButton.styleFrom(
            backgroundColor: OsmeaColors.sunsetGlow,
            foregroundColor: OsmeaColors.white,
          ),
          onPressed: onPressed,
          child: Text(text),
        );
    }
  }
}
```

#### 2. Card Color Schemes
```dart
// ‚úÖ Good - Consistent card colors
class OsmeaCard extends StatelessWidget {
  final Widget child;
  final CardVariant variant;
  
  const OsmeaCard({
    required this.child,
    this.variant = CardVariant.default_,
  });
  
  @override
  Widget build(BuildContext context) {
    Color backgroundColor;
    Color borderColor;
    
    switch (variant) {
      case CardVariant.default_:
        backgroundColor = OsmeaColors.white;
        borderColor = OsmeaColors.silver;
        break;
      case CardVariant.highlighted:
        backgroundColor = OsmeaColors.crystalBay.withOpacity(0.1);
        borderColor = OsmeaColors.nordicBlue;
        break;
      case CardVariant.success:
        backgroundColor = OsmeaColors.springLeaf.withOpacity(0.1);
        borderColor = OsmeaColors.forestHeart;
        break;
      case CardVariant.warning:
        backgroundColor = OsmeaColors.desertSand.withOpacity(0.1);
        borderColor = OsmeaColors.sunsetGlow;
        break;
    }
    
    return Container(
      decoration: BoxDecoration(
        color: backgroundColor,
        border: Border.all(color: borderColor),
        borderRadius: BorderRadius.circular(8),
      ),
      child: child,
    );
  }
}
```

### üöÄ Best Practices

#### 1. Color Naming Consistency
```dart
// ‚úÖ Good - Use semantic color names
Text(
  'Primary text',
  style: TextStyle(color: OsmeaColors.thunder),
)

Text(
  'Secondary text',
  style: TextStyle(color: OsmeaColors.slate),
)

Text(
  'Muted text',
  style: TextStyle(color: OsmeaColors.steel),
)

// ‚ùå Bad - Inconsistent naming
Text(
  'Primary text',
  style: TextStyle(color: OsmeaColors.grayMaterial[700]),
)
```

#### 2. Accessibility Considerations
```dart
// ‚úÖ Good - Ensure proper contrast ratios
Text(
  'High contrast text',
  style: TextStyle(
    color: OsmeaColors.thunder,  // Dark text on light background
    backgroundColor: OsmeaColors.white,
  ),
)

Text(
  'High contrast text on dark',
  style: TextStyle(
    color: OsmeaColors.paperWhite,  // Light text on dark background
    backgroundColor: OsmeaColors.void_,
  ),
)

// ‚ùå Bad - Poor contrast
Text(
  'Low contrast text',
  style: TextStyle(
    color: OsmeaColors.steel,  // Too light for readability
    backgroundColor: OsmeaColors.white,
  ),
)
```

#### 3. Theme-Aware Color Usage
```dart
// ‚úÖ Good - Theme-aware color selection
class ThemedContainer extends StatelessWidget {
  final Widget child;
  
  const ThemedContainer({required this.child});
  
  @override
  Widget build(BuildContext context) {
    final isDark = Theme.of(context).brightness == Brightness.dark;
    
    return Container(
      color: isDark ? OsmeaColors.shark : OsmeaColors.paperWhite,
      child: Text(
        'Themed text',
        style: TextStyle(
          color: isDark ? OsmeaColors.paperWhite : OsmeaColors.thunder,
        ),
      ),
    );
  }
}
```

### üîç Code Review Checklist

#### Color System Usage
- [ ] Using semantic color names instead of hard-coded values
- [ ] Consistent gray palette usage for text hierarchy
- [ ] Proper brand color usage for primary actions
- [ ] Appropriate status colors for different states
- [ ] Theme-aware color selection
- [ ] Accessibility considerations (contrast ratios)
- [ ] Consistent shadow and elevation colors
- [ ] Proper opacity usage for subtle effects

#### Color Quality
- [ ] Colors follow brand guidelines
- [ ] Proper contrast ratios for accessibility
- [ ] Consistent color usage across components
- [ ] Appropriate color choices for different contexts
- [ ] Theme integration works correctly
- [ ] Color names are semantic and meaningful

#### Code Quality
- [ ] No hard-coded color values
- [ ] Consistent naming conventions
- [ ] Proper color organization
- [ ] Clean and readable code
- [ ] Proper documentation
- [ ] Performance considerations

### üìö Common Patterns

#### 1. Status Indicators
```dart
Row(
  children: [
    Container(
      width: 8,
      height: 8,
      decoration: BoxDecoration(
        color: OsmeaColors.forestHeart,
        shape: BoxShape.circle,
      ),
    ),
    SizedBox(width: 8),
    Text(
      'Online',
      style: TextStyle(color: OsmeaColors.forestHeart),
    ),
  ],
)
```

#### 2. Progress Indicators
```dart
Container(
  height: 4,
  decoration: BoxDecoration(
    color: OsmeaColors.silver,
    borderRadius: BorderRadius.circular(2),
  ),
  child: FractionallySizedBox(
    alignment: Alignment.centerLeft,
    widthFactor: 0.7,
    child: Container(
      decoration: BoxDecoration(
        color: OsmeaColors.nordicBlue,
        borderRadius: BorderRadius.circular(2),
      ),
    ),
  ),
)
```

#### 3. Input Field Styling
```dart
Container(
  decoration: BoxDecoration(
    color: OsmeaColors.white,
    border: Border.all(color: OsmeaColors.silver),
    borderRadius: BorderRadius.circular(8),
  ),
  child: TextField(
    decoration: InputDecoration(
      hintText: 'Enter text',
      hintStyle: TextStyle(color: OsmeaColors.steel),
      border: InputBorder.none,
      contentPadding: EdgeInsets.all(16),
    ),
    style: TextStyle(color: OsmeaColors.thunder),
  ),
)
```

### üéØ Color Reference

#### Gray Palette
- `paperWhite` (25) - Lightest background
- `snow` (50) - Light background
- `ash` (100) - Very light gray
- `silver` (200) - Light borders
- `platinum` (300) - Light text
- `steel` (400) - Muted text
- `pewter` (500) - Medium gray
- `slate` (600) - Secondary text
- `thunder` (700) - Primary text
- `shark` (800) - Dark background
- `eclipse` (900) - Darker background
- `void_` (950) - Darkest background

#### Blue Palette
- `crystalBay` (50) - Lightest blue
- `oceanMist` (100) - Light blue
- `azureWave` (200) - Medium light blue
- `nordicBlue` (300) - Primary blue
- `deepSea` (400) - Medium blue
- `atlantic` (600) - Dark blue
- `nightOcean` (700) - Darker blue
- `marineDepth` (800) - Very dark blue
- `abyss` (900) - Darkest blue

#### Orange Palette
- `desertSand` (100) - Light orange
- `goldenHour` (200) - Medium light orange
- `sunsetGlow` (300) - Primary orange
- `amberFlame` (400) - Dark orange

#### Green Palette
- `springLeaf` (100) - Light green
- `meadow` (200) - Medium light green
- `forestHeart` (300) - Primary green
- `pineGrove` (400) - Dark green

### üìö Resources

- [Material Design Color System](https://material.io/design/color/the-color-system.html)
- [Web Accessibility Guidelines - Color](https://www.w3.org/WAI/WCAG21/Understanding/use-of-color.html)
- [Flutter Color Documentation](https://api.flutter.dev/flutter/dart-ui/Color-class.html)
- [OSMEA Design System](https://github.com/masterfabric-mobile/osmea/tree/dev/docs)

---

**Author:** [@gurkanfikretgunak](https://github.com/gurkanfikretgunak) | **OSMEA Color System** - Comprehensive color system development rules
