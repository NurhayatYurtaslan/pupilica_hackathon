# OsmeaComponents Usage Rules for Flutter App

## Overview
This project uses OsmeaComponents instead of standard Flutter widgets. OsmeaComponents provides a comprehensive set of pre-styled, consistent UI components that should be used throughout the application.

## Import Statement
Always import OsmeaComponents at the top of your files:
```dart
import 'package:osmea_components/osmea_components.dart';
```

## Available OsmeaComponents

### üèóÔ∏è Layout Components
- `OsmeaComponents.scaffold()` - Main scaffold wrapper
- `OsmeaComponents.center()` - Center alignment wrapper
- `OsmeaComponents.container()` - Container wrapper
- `OsmeaComponents.column()` - Column layout
- `OsmeaComponents.row()` - Row layout
- `OsmeaComponents.stack()` - Stack layout
- `OsmeaComponents.wrap()` - Wrap layout
- `OsmeaComponents.expanded()` - Expanded widget
- `OsmeaComponents.flexible()` - Flexible widget
- `OsmeaComponents.sizedBox()` - SizedBox wrapper
- `OsmeaComponents.padding()` - Padding wrapper
- `OsmeaComponents.positioned()` - Positioned widget
- `OsmeaComponents.singleChildScrollView()` - Scrollable content
- `OsmeaComponents.responsiveLayout()` - Responsive layout wrapper

### üé® UI Components
- `OsmeaComponents.text()` - Text widget with consistent styling
- `OsmeaComponents.image()` - Image widget with consistent styling
- `OsmeaComponents.richText()` - Rich text widget
- `OsmeaComponents.divider()` - Divider component
- `OsmeaComponents.spacer()` - Spacer component
- `OsmeaComponents.clipRRect()` - ClipRRect wrapper

### üîò Interactive Components
- `OsmeaComponents.button()` - Button component
- `OsmeaComponents.loginButton()` - Specialized login button
- `OsmeaComponents.checkbox()` - Checkbox component
- `OsmeaComponents.radioButton()` - Radio button component
- `OsmeaComponents.switchButton()` - Switch component
- `OsmeaComponents.dropdown()` - Dropdown component
- `OsmeaComponents.textField()` - Text field component
- `OsmeaComponents.searchbar()` - Search bar component

### üéØ Navigation Components
- `OsmeaComponents.navbar()` - Navigation bar
- `OsmeaComponents.tabbar()` - Tab bar component
- `OsmeaComponents.stepper()` - Stepper component

### üìã List Components
- `OsmeaComponents.listItem()` - List item component
- `OsmeaComponents.cards()` - Card components
- `OsmeaComponents.carousel()` - Carousel component

### üé™ Feedback Components
- `OsmeaComponents.loading()` - Loading indicator
- `OsmeaComponents.progress()` - Progress indicator
- `OsmeaComponents.toast()` - Toast notification
- `OsmeaComponents.snackbar()` - Snackbar component
- `OsmeaComponents.popup()` - Popup component

### üé® Visual Components
- `OsmeaComponents.chips()` - Chip components
- `OsmeaComponents.counter()` - Counter component
- `OsmeaComponents.dotIndicator()` - Dot indicator
- `OsmeaComponents.collapse()` - Collapsible component
- `OsmeaComponents.fittedBox()` - FittedBox wrapper
- `OsmeaComponents.footer()` - Footer component
- `OsmeaComponents.ticketWidget()` - Ticket widget

## Usage Rules

### ‚úÖ ALWAYS Use OsmeaComponents For:

1. **All UI Components**
   - Text, buttons, inputs, containers
   - Layout components (Column, Row, Stack, etc.)
   - Navigation components
   - Feedback components

2. **Consistent Styling**
   - Colors, fonts, spacing
   - Border radius, shadows, animations
   - Responsive design

3. **Theme Integration**
   - Dark/light mode support
   - Brand colors and typography
   - Consistent spacing and sizing

### ‚ùå NEVER Use Standard Flutter Widgets For:

1. **UI Components** - Use OsmeaComponents instead
2. **Layout Components** - Use OsmeaComponents wrappers
3. **Styling** - Use OsmeaComponents styling system
4. **Colors** - Use OsmeaColors instead of Colors
5. **Text Styling** - Use OsmeaComponents.text() instead of Text()

### üö´ PROHIBITED Visual Effects:

1. **BoxShadow** - NEVER use BoxShadow in any decoration
   - Use borders and color variations instead
   - Focus on clean, flat design principles
   - Use OsmeaColors with alpha values for depth

#### BoxShadow Prohibition Examples:

```dart
// ‚ùå WRONG - Using BoxShadow
Container(
  decoration: BoxDecoration(
    color: OsmeaColors.white,
    borderRadius: BorderRadius.circular(8),
    boxShadow: [
      BoxShadow(
        color: OsmeaColors.black.withValues(alpha: 0.1),
        blurRadius: 10,
        offset: Offset(0, 4),
      ),
    ],
  ),
)

// ‚úÖ CORRECT - Using borders and alpha values
Container(
  decoration: BoxDecoration(
    color: OsmeaColors.white.withValues(alpha: 0.9),
    borderRadius: BorderRadius.circular(8),
    border: Border.all(
      color: OsmeaColors.grayMaterial300,
      width: 1,
    ),
  ),
)

// ‚úÖ CORRECT - Using color variations for depth
Container(
  decoration: BoxDecoration(
    color: OsmeaColors.white,
    borderRadius: BorderRadius.circular(8),
    border: Border.all(
      color: OsmeaColors.grayMaterial200,
      width: 2,
    ),
  ),
)
```

## Code Examples

### 1. Basic Layout Structure
```dart
// ‚ùå Wrong - using standard Flutter widgets
Scaffold(
  body: Container(
    padding: EdgeInsets.all(16),
    child: Column(
      children: [
        Text('Title'),
        SizedBox(height: 16),
        ElevatedButton(
          onPressed: () {},
          child: Text('Button'),
        ),
      ],
    ),
  ),
)

// ‚úÖ Correct - using OsmeaComponents
OsmeaComponents.scaffold(
  body: OsmeaComponents.container(
    padding: context.paddingNormal,
    child: OsmeaComponents.column(
      children: [
        OsmeaComponents.text('Title'),
        OsmeaComponents.sizedBox(height: context.height16),
        OsmeaComponents.button(
          onPressed: () {},
          child: OsmeaComponents.text('Button'),
        ),
      ],
    ),
  ),
)
```

### 2. Text Components
```dart
// ‚ùå Wrong - using standard Text widget
Text(
  'Hello World',
  style: TextStyle(
    fontSize: 18,
    fontWeight: FontWeight.bold,
    color: Colors.blue,
  ),
)

// ‚úÖ Correct - using OsmeaComponents.text
OsmeaComponents.text(
  'Hello World',
  fontSize: 18,
  fontWeight: FontWeight.bold,
  color: OsmeaColors.nordicBlue,
)
```

### 3. Button Components
```dart
// ‚ùå Wrong - using standard ElevatedButton
ElevatedButton(
  onPressed: () {},
  style: ElevatedButton.styleFrom(
    backgroundColor: Colors.blue,
    padding: EdgeInsets.symmetric(horizontal: 24, vertical: 12),
  ),
  child: Text('Click Me'),
)

// ‚úÖ Correct - using OsmeaComponents.button
OsmeaComponents.button(
  onPressed: () {},
  backgroundColor: OsmeaColors.nordicBlue,
  padding: context.horizontalPaddingHigh + context.verticalPaddingMedium,
  child: OsmeaComponents.text('Click Me'),
)
```

### 4. Form Components
```dart
// ‚ùå Wrong - using standard form widgets
Column(
  children: [
    TextFormField(
      decoration: InputDecoration(
        labelText: 'Email',
        border: OutlineInputBorder(),
      ),
    ),
    SizedBox(height: 16),
    CheckboxListTile(
      title: Text('Remember me'),
      value: false,
      onChanged: (value) {},
    ),
  ],
)

// ‚úÖ Correct - using OsmeaComponents
OsmeaComponents.column(
  children: [
    OsmeaComponents.textField(
      labelText: 'Email',
      decoration: OsmeaComponents.inputDecoration(),
    ),
    OsmeaComponents.sizedBox(height: context.height16),
    OsmeaComponents.checkbox(
      title: OsmeaComponents.text('Remember me'),
      value: false,
      onChanged: (value) {},
    ),
  ],
)
```

### 5. List Components
```dart
// ‚ùå Wrong - using standard ListView
ListView.builder(
  itemCount: items.length,
  itemBuilder: (context, index) {
    return ListTile(
      title: Text(items[index].title),
      subtitle: Text(items[index].subtitle),
      trailing: Icon(Icons.arrow_forward),
    );
  },
)

// ‚úÖ Correct - using OsmeaComponents
OsmeaComponents.listView(
  itemCount: items.length,
  itemBuilder: (context, index) {
    return OsmeaComponents.listItem(
      title: OsmeaComponents.text(items[index].title),
      subtitle: OsmeaComponents.text(items[index].subtitle),
      trailing: OsmeaComponents.icon(Icons.arrow_forward),
    );
  },
)
```

### 6. Card Components
```dart
// ‚ùå Wrong - using standard Card
Card(
  margin: EdgeInsets.all(8),
  child: Padding(
    padding: EdgeInsets.all(16),
    child: Column(
      children: [
        Text('Card Title'),
        Text('Card Content'),
      ],
    ),
  ),
)

// ‚úÖ Correct - using OsmeaComponents
OsmeaComponents.cards(
  margin: context.marginNormal,
  child: OsmeaComponents.padding(
    padding: context.paddingNormal,
    child: OsmeaComponents.column(
      children: [
        OsmeaComponents.text('Card Title'),
        OsmeaComponents.text('Card Content'),
      ],
    ),
  ),
)
```

### 7. Loading and Feedback
```dart
// ‚ùå Wrong - using standard loading widgets
if (isLoading)
  Center(
    child: CircularProgressIndicator(),
  )
else
  Text('Content loaded')

// ‚úÖ Correct - using OsmeaComponents
if (isLoading)
  OsmeaComponents.center(
    child: OsmeaComponents.loading(),
  )
else
  OsmeaComponents.text('Content loaded')
```

### 8. Navigation Components
```dart
// ‚ùå Wrong - using standard navigation
BottomNavigationBar(
  items: [
    BottomNavigationBarItem(icon: Icon(Icons.home), label: 'Home'),
    BottomNavigationBarItem(icon: Icon(Icons.settings), label: 'Settings'),
  ],
)

// ‚úÖ Correct - using OsmeaComponents
OsmeaComponents.navbar(
  items: [
    OsmeaComponents.navItem(icon: Icons.home, label: 'Home'),
    OsmeaComponents.navItem(icon: Icons.settings, label: 'Settings'),
  ],
)
```

## Color Usage

### ‚úÖ Use OsmeaColors
```dart
// ‚úÖ Correct - using OsmeaColors
OsmeaComponents.text(
  'Hello',
  color: OsmeaColors.nordicBlue,
)

Container(
  color: OsmeaColors.white,
  child: OsmeaComponents.text('Content'),
)
```

### ‚ùå Don't Use Standard Colors
```dart
// ‚ùå Wrong - using standard Colors
Text(
  'Hello',
  style: TextStyle(color: Colors.blue),
)

Container(
  color: Colors.white,
  child: Text('Content'),
)
```

## Responsive Design

### Use OsmeaComponents with Sizer Extensions
```dart
// ‚úÖ Correct - responsive design
OsmeaComponents.container(
  width: context.dynamicWidth(0.8),
  height: context.dynamicHeight(0.3),
  padding: context.paddingNormal,
  child: OsmeaComponents.text('Responsive Content'),
)

// ‚ùå Wrong - fixed dimensions
Container(
  width: 300,
  height: 200,
  padding: EdgeInsets.all(16),
  child: Text('Fixed Content'),
)
```

## Animation and Transitions

### Use OsmeaComponents for Animations
```dart
// ‚úÖ Correct - using OsmeaComponents animations
OsmeaComponents.animatedContainer(
  duration: context.animationMedium,
  curve: context.easeInOut,
  child: OsmeaComponents.text('Animated Content'),
)

// ‚ùå Wrong - using standard AnimatedContainer
AnimatedContainer(
  duration: Duration(milliseconds: 300),
  curve: Curves.easeInOut,
  child: Text('Animated Content'),
)
```

## Best Practices

### 1. Consistent Component Usage
- Always use OsmeaComponents for UI elements
- Use appropriate OsmeaComponents for each use case
- Maintain consistent styling throughout the app

### 2. Proper Import Structure
```dart
import 'package:flutter/material.dart';
import 'package:flutter/services.dart';
import 'package:flutter_bloc/flutter_bloc.dart';
import 'package:osmea_components/osmea_components.dart';
import 'package:pupilica_hackathon/core/helpers/logger/logger.dart';
// ... other imports
```

### 3. Component Composition
```dart
// ‚úÖ Good - composing OsmeaComponents
OsmeaComponents.scaffold(
  body: OsmeaComponents.singleChildScrollView(
    child: OsmeaComponents.padding(
      padding: context.paddingNormal,
      child: OsmeaComponents.column(
        children: [
          OsmeaComponents.text('Title'),
          OsmeaComponents.sizedBox(height: context.height16),
          OsmeaComponents.cards(
            child: OsmeaComponents.padding(
              padding: context.paddingMedium,
              child: OsmeaComponents.column(
                children: [
                  OsmeaComponents.text('Card Content'),
                  OsmeaComponents.sizedBox(height: context.height8),
                  OsmeaComponents.button(
                    onPressed: () {},
                    child: OsmeaComponents.text('Action'),
                  ),
                ],
              ),
            ),
          ),
        ],
      ),
    ),
  ),
)
```

### 4. Error Handling with OsmeaComponents
```dart
// ‚úÖ Correct - using OsmeaComponents for error states
if (hasError)
  OsmeaComponents.center(
    child: OsmeaComponents.column(
      children: [
        OsmeaComponents.icon(Icons.error, size: 48),
        OsmeaComponents.sizedBox(height: context.height16),
        OsmeaComponents.text('Something went wrong'),
        OsmeaComponents.sizedBox(height: context.height8),
        OsmeaComponents.button(
          onPressed: () => retry(),
          child: OsmeaComponents.text('Retry'),
        ),
      ],
    ),
  )
```

## Migration Guidelines

When refactoring existing code:

1. **Replace Scaffold** ‚Üí `OsmeaComponents.scaffold`
2. **Replace Container** ‚Üí `OsmeaComponents.container`
3. **Replace Text** ‚Üí `OsmeaComponents.text`
4. **Replace ElevatedButton** ‚Üí `OsmeaComponents.button`
5. **Replace TextField** ‚Üí `OsmeaComponents.textField`
6. **Replace Card** ‚Üí `OsmeaComponents.cards`
7. **Replace ListView** ‚Üí `OsmeaComponents.listView`
8. **Replace Colors** ‚Üí `OsmeaColors`

## Component-Specific Rules

### Layout Components
- Use `OsmeaComponents.scaffold()` for main app structure
- Use `OsmeaComponents.center()` for centering content
- Use `OsmeaComponents.container()` for containers
- Use `OsmeaComponents.column()` and `OsmeaComponents.row()` for layouts

### Text Components
- Always use `OsmeaComponents.text()` instead of `Text()`
- Use appropriate fontSize, fontWeight, and color parameters
- Use OsmeaColors for text colors

### Button Components
- Use `OsmeaComponents.button()` for standard buttons
- Use `OsmeaComponents.loginButton()` for login actions
- Use appropriate styling parameters

### Form Components
- Use `OsmeaComponents.textField()` for text inputs
- Use `OsmeaComponents.checkbox()` for checkboxes
- Use `OsmeaComponents.radioButton()` for radio buttons
- Use `OsmeaComponents.dropdown()` for dropdowns

### Feedback Components
- Use `OsmeaComponents.loading()` for loading states
- Use `OsmeaComponents.toast()` for toast messages
- Use `OsmeaComponents.snackbar()` for snackbars
- Use `OsmeaComponents.progress()` for progress indicators

This comprehensive approach ensures consistent, maintainable, and professional UI throughout your Flutter application using OsmeaComponents.
